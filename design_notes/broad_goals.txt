TLDR:
This is a module to get high precision acceleration values for the moon that one would need for low altitude maneuvers.

Background:
The 2011 GRAIL mission (https://pds.nasa.gov/ds-view/pds/viewProfile.jsp?dsid=GRAIL-L-LGRS-5-RDR-V1.0)
set a new benchmark for the highest resolution gravitational map of the Moon. This is incredibly valuable for mission planners as the Moon's history as Earths asteroid shield has left it quite lumpy. Unfortunately the publically available data is not trivially digestible as a simple function in space that returns an acceleration due to gravity vector. This project intends to provide a wrapper for the data to fix that.

Goals:
    write up explanation of 
        which data files are referenced
        how files are parsed into a single force value
    produce a python module that quickly generates an acceleration vector for a given location vector
        load files
        implement/reference functions for calculating spherical harmonics
        run through terms until satisfied with convergence
    push it to the python package index

stretch goals:
    ergonomic:
        support for multiple coordinate systems
        automate downloading data files
    performance:
        profiling calculation to identify areas of speed up
        implement parallellization
        look into improving sections with rust
    outreach:
        if convertible to wasm, implement little web demo, either piloting near points of interest, or debris trajectory map

possible tests:
    calculate some known values of harmonics
        things that are necessarily 0 or 1
    a good end-to-end would be comparing a low orbitting satellite's path with one generated by this
        difficulty: how much impact from the sun+earth would we expect?
    making sure later terms generally give smaller contributions? 